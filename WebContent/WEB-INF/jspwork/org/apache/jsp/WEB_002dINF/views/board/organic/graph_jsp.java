/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2019-08-18 18:49:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board.organic;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Locale;
import java.util.GregorianCalendar;
import java.util.Calendar;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import com.pinkpaw.member.model.vo.Member;

public final class graph_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1566139411090L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Calendar");
    _jspx_imports_classes.add("java.util.GregorianCalendar");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("com.pinkpaw.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 유기동물 통계/현황 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 
//로그인성공후 session객체에 저장된 memberLoggedIn가져오기
Member memberLoggedIn
	= (Member)session.getAttribute("memberLoggedIn");
System.out.println("memberLoggedIn@index.jsp="+memberLoggedIn);
/* memberLoggedIn = new Member();
memberLoggedIn.setMemberId("admin");
System.out.println("memberLoggedIn@index.jsp="+memberLoggedIn); */

//쿠키관련 처리
Cookie[] cookies = request.getCookies();
boolean saveId = false;
String memberId = "";

if(cookies != null){
	System.out.println("-------------------------");
	for(Cookie c: cookies){
		String key = c.getName();
		String value = c.getValue();
		System.out.println(key+" : "+value);
		
		//전송된 saveId쿠키가 있는 경우
		if("saveId".equals(key)){
			saveId = true;
			memberId = value;
		}
	}
	System.out.println("-------------------------");
}


int recvCount = 0;
if(session.getAttribute("recvCount")!=null){
		recvCount = (int)session.getAttribute("recvCount");
}
System.out.println("recvCount@header="+recvCount);

	

      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>PinkPaw</title>\r\n");
      out.write("<!-- bootstrap -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n");
      out.write("\tintegrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n");
      out.write("\tcrossorigin=\"anonymous\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"\r\n");
      out.write("\tintegrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<!--<link rel=\"shortcut icon\" href=\"images/favicon.ico\" type=\"image/x-icon\">\r\n");
      out.write("<link rel=\"icon\" href=\"images/favicon.ico\" type=\"image/x-icon\">-->\r\n");
      out.write("<meta name=\"viewport\"\r\n");
      out.write("\tcontent=\"width=device-width,user-scalable=no,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,target-densitydpi=medium-dpi\">\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/css/reset.css\"\r\n");
      out.write("\trel=\"stylesheet\" />\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/css/main.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/css/Font.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"");
      out.print(request.getContextPath());
      out.write("/css/Swiper.css\"\r\n");
      out.write("\trel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.4.1.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-migrate-3.0.0.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-ui.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/swiper.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery.mousewheel.min.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://fonts.googleapis.com/css?family=Noto+Sans|Noto+Sans+KR:100,300,400,500,700,900\"\r\n");
      out.write("\trel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("function register(){\r\n");
      out.write("\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/member/termsOfService\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\t\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function validate(){\r\n");
      out.write("\tif($(\"#memberId\").val().trim().length == 0){\r\n");
      out.write("\t\talert(\"아이디를 입력하세요.\");\r\n");
      out.write("\t\t$(\"#memberId\").focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\tif($(\"#password\").val().trim().length == 0){\r\n");
      out.write("\t\talert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("\t\t$(\"#password\").focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\treturn true;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(()=>{\r\n");
      out.write("\tvar host = location.host;\r\n");
      out.write("\tvar ws = new WebSocket('ws://'+host+\"");
      out.print(request.getContextPath());
      out.write("/chat/helloWebSocket\");\r\n");
      out.write("\t\r\n");
      out.write("\t//최초연결시 open이벤트 핸들러\r\n");
      out.write("\tws.onopen = e => {\r\n");
      out.write("\t\tconsole.log(\"ws open!\");\r\n");
      out.write("\t};\r\n");
      out.write("\t//서버로부터 message를 전달 받았을 때 핸들러\r\n");
      out.write("\tws.onmessage = e => {\r\n");
      out.write("\t\t//console.log(\"ws message: \"+e.data);\r\n");
      out.write("\t\tvar o = JSON.parse(e.data);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//타입 메세지 처리\r\n");
      out.write("\t\tif(o.type === 'message'){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar html = \"<li class='list-group-item'>\";\r\n");
      out.write("\t\t\thtml += \"<span class='badge badge-dark'>\"+o.sender+\"</span>\";\r\n");
      out.write("\t\t\thtml += \"&nbsp;&nbsp;\"+o.msg;\r\n");
      out.write("\t\t\thtml += \"</li>\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#msg-container ul\").append(html);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//scroll처리\r\n");
      out.write("\t\t\tvar scrollHeight = $(\"#msg-container\").prop(\"scrollHeight\");\r\n");
      out.write("\t\t\t//console.log(scrollHeight);\r\n");
      out.write("\t\t\t$(\"#msg-container\").scrollTop(scrollHeight);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if(o.type === \"dm\"){\r\n");
      out.write("\t\t\talert(\"쪽지가 도착했습니다\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t};\r\n");
      out.write("\t//서버처리 도중 error발생시 핸들러\r\n");
      out.write("\tws.onerror = e =>{\r\n");
      out.write("\t\tconsole.log(\"ws error!\");\t\t\r\n");
      out.write("\t};\r\n");
      out.write("\t//서버와 연결 종료시 핸들러\r\n");
      out.write("\tws.onclose = e =>{\r\n");
      out.write("\t\tconsole.log(\"ws close!\");\t\t\t\r\n");
      out.write("\t};\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<!--header-->\r\n");
      out.write("\t<div class=\"headerWrap\">\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<h1  style=\"width: 800px; margin-left: -20px;\">\r\n");
      out.write("\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("\"><img src=\"");
      out.print(request.getContextPath());
      out.write("/images/main/logo_white.png\" alt=\"logo\" style=\"margin-top: -9px;\"></a>\r\n");
      out.write("\t\t</h1>\r\n");
      out.write("\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("​\r\n");
      out.write("\t\t\t$('.headerWrap').mouseover(function(e){\r\n");
      out.write("\t\t\t\t$(this).css('background','rgba(34,34,34,0.7)');\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$('.headerWrap').mouseout(function(e){\r\n");
      out.write("\t\t\t\t$(this).css('background','none');}\r\n");
      out.write("\t\t\t);\r\n");
      out.write("​\r\n");
      out.write("\t\t\t$('header>div>ul:first-child>li').mouseover(function(e){\r\n");
      out.write("\t\t\t\t$('.headerWrap').css('height','140px');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t$('header>div>ul:first-child>li').mouseout(function(e){\r\n");
      out.write("\t\t\t\t$('.headerWrap').css('height','84px');\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t​ <a href=\"#none\" onClick=\"$('.menuWrap').fadeIn(300);\"><img\r\n");
      out.write("\t\t\t\tsrc=\"");
      out.print(request.getContextPath());
      out.write("/images/main/icon_meun.png\" alt=\"메뉴바\"></a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t​ ​\r\n");
      out.write("\t<!--menu-->\r\n");
      out.write("\t<div class=\"menuWrap\">\r\n");
      out.write("\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t<a href=\"#none\" onClick=\"$('.menuWrap').fadeOut(300);\"\r\n");
      out.write("\t\t\t\tclass=\"menu_closeBtn\"><img src=\"images/main/modal_close.gif\"\r\n");
      out.write("\t\t\t\talt=\"닫기\"></a>\r\n");
      out.write("\t\t\t<dl>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t");
 if(memberLoggedIn == null){ 
      out.write("\r\n");
      out.write("\t\t\t\t<form action=\"");
      out.print(request.getContextPath() );
      out.write("/member/login\" \r\n");
      out.write("\t\t\t\t\t  id=\"loginFrm\"\r\n");
      out.write("\t\t\t\t\t  method=\"post\"\r\n");
      out.write("\t\t\t\t\t  onsubmit=\"return validate();\">\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"text\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t   name=\"memberId\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t   id=\"memberId\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t   placeholder=\"아이디\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t   tabindex=\"1\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t   value=\"");
      out.print(saveId?memberId:"");
      out.write("\"/>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"로그인\" class=\"btn btn-primary\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t   tabindex=\"3\" />\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"password\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t   name=\"password\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t   id=\"password\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t   placeholder=\"비밀번호\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t   tabindex=\"2\"/>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t   name=\"saveId\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t   id=\"saveId\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t   ");
      out.print(saveId?"checked":"");
      out.write("/>\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"saveId\">아이디저장</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<button\r\n");
      out.write("\t\t\t\t\t\t\t\tclass=\"btn btn-primary\" \r\n");
      out.write("\t\t\t\t\t\t\t\tvalue=\"회원가입\"\r\n");
      out.write("\t\t\t\t\t\t\t\tonclick=\"register();\" >회원가입</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</form>\t\r\n");
      out.write("\t\t\t");
 } 
			//로그인에 성공한 경우
			else {
      out.write("\t\r\n");
      out.write("\t\t\t\t<table id=\"logged-in\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(memberLoggedIn.getMemberName() );
      out.write("님, 안녕하세요.\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   value=\"쪽지 ");
      out.print(recvCount );
      out.write("개\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/board/dm/dmList?memberId=");
      out.print(memberLoggedIn.getMemberId());
      out.write("'\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t");
if(memberLoggedIn != null && "admin".equals(memberLoggedIn.getMemberId())){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   value=\"신고쪽지\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/board/dm/reportDMList'\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t   <input type=\"button\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   value=\"신고게시판\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/admin/reportBoardList'\"/>\r\n");
      out.write("\t\t\t\t\t\t\t");
} 
      out.write("\t   \r\n");
      out.write("\t\t\t\t\t\t\t\t   \t   \r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   value=\"마이페이지\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/member/memberView?memberId=");
      out.print(memberLoggedIn.getMemberId());
      out.write("'\"/>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   value=\"내가쓴글보기\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/member/myBoard'\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t   <input type=\"button\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   value=\"내가쓴댓글보기\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/member/myComment'\"/>\t   \r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   value=\"로그아웃\" \r\n");
      out.write("\t\t\t\t\t\t\t\t   onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/member/logout'\"/>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\t\t\t\t\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t");
 } 
      out.write("\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t<dl>\r\n");
      out.write("\t\t\t\t<dt>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/board/notice/noticeBoardList\">공지사항</a>\r\n");
      out.write("\t\t\t\t</dt>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\t\t\t<dl>\r\n");
      out.write("\t\t\t\t<dt class=\"sub_menu\">유기동물</dt>\r\n");
      out.write("\t\t\t\t<dd>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.write("/board/organic/graph/OrganicGraph\">유기동물 통계</a>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\t\t\t\t<dd>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/animal/animalNotice\">유기동물 공고</a>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\t\t\t<dl class=\"ddSize\">\r\n");
      out.write("\t\t\t\t<dt class=\"sub_menu\">보호소</dt>\r\n");
      out.write("\t\t\t\t<dd>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/shelter/shelterList\">보호소 찾기</a>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\t\t\t\t<dd>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/board/volunteer/volunteerList\">보호소 봉사요청</a>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\t\t\t<dl>\r\n");
      out.write("\t\t\t\t<dt class=\"sub_menu\">커뮤니티</dt>\r\n");
      out.write("\t\t\t\t<dd>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/board/missingList\">실종동물</a>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\t\t\t\t<dd>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/board/parcelout/parceloutList\">분양동물</a>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\t\t\t\t<dd>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/board/review/reviewList\">후기</a>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\t\t\t\t<dd>\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/board/community/free/freeList\">자유게시판</a>\r\n");
      out.write("\t\t\t\t</dd>\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\t\t\t<dl>\r\n");
      out.write("\t\t\t\t\t");
if(memberLoggedIn!=null && "admin".equals(memberLoggedIn.getMemberId())){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/memberList\">회원리스트</a>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</dl>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t$(()=>{\r\n");
      out.write("\t\t\t$(\".sub_menu\").on(\"click\", function(e){\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$(this).parent().siblings().children(\"dd\").css('display','none');\r\n");
      out.write("\t\t\t\t$(this).siblings().css('display','inline-block');\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t</script>​\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!--menu end-->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!--header end-->\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("<!-- // jQuery UI CSS파일  -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://code.jquery.com/ui/1.8.18/themes/base/jquery-ui.css\" type=\"text/css\" />  \r\n");
      out.write("<!-- // jQuery 기본 js파일 -->\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"></script>  \r\n");
      out.write("<!-- // jQuery UI 라이브러리 js파일 -->\r\n");
      out.write("<script src=\"http://code.jquery.com/ui/1.8.18/jquery-ui.min.js\"></script>\t\r\n");
      out.write("\t\r\n");

	Map<String, Integer> organicMap = (Map) request.getAttribute("organicMap");
	Date date = new Date();
	SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
	String today = sdf.format(date);
	Calendar cal = new GregorianCalendar(Locale.KOREA);
	cal.setTime(date);
	cal.add(Calendar.YEAR, -1); //1년을 뺀다.
	String AYearAgo = sdf.format(cal.getTime());
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("#title{\r\n");
      out.write("\tfont-size: 28px;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("section{\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\ttop: 120px;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding-bottom: 500px;\r\n");
      out.write("}\r\n");
      out.write("#dateSelect{\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\ttop: 20px;\r\n");
      out.write("}\r\n");
      out.write("#date1{\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("}\r\n");
      out.write("#date2{\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("}\r\n");
      out.write("#piegraph{\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("\ttop: 100px;\r\n");
      out.write("\tpadding-bottom: 80px;\r\n");
      out.write("}\r\n");
      out.write(" #bargraph{\r\n");
      out.write(" \tposition: relative;\r\n");
      out.write(" \tmargin: 0 auto;\r\n");
      out.write(" \ttop: 130px;\r\n");
      out.write(" }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<section class=\"container\">\r\n");
      out.write("\t<h1 id=\"title\">전국 모든 지역 유기동물 현황</h1>\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"dateSelect\">\r\n");
      out.write("\t\t<div id=\"date1\">\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"testDatepicker1\" value=\"");
      out.print(AYearAgo);
      out.write("\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t~\r\n");
      out.write("\t\t<div id=\"date2\">\r\n");
      out.write("\t\t\t<input type=\"text\" id=\"testDatepicker2\" value=\"");
      out.print(today);
      out.write("\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br /><br />\r\n");
      out.write("\t<hr />\r\n");
      out.write("\t<div id=\"graph\">\r\n");
      out.write("\t\t<div style=\"width: 500px\" id=\"piegraph\">\r\n");
      out.write("\t\t\t<canvas id=\"myPieChart\"></canvas>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"width: 500px\" id=\"bargraph\">\r\n");
      out.write("\t\t\t<canvas id=\"myBarChart\"></canvas>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//원형 그래프 부분\r\n");
      out.write("// 우선 컨텍스트를 가져옵니다. \r\n");
      out.write("var ctx = document.getElementById(\"myPieChart\").getContext('2d');\r\n");
      out.write("/*\r\n");
      out.write(" - Chart를 생성하면서, \r\n");
      out.write(" - ctx를 첫번째 argument로 넘겨주고, \r\n");
      out.write(" - 두번째 argument로 그림을 그릴때 필요한 요소들을 모두 넘겨줍니다. \r\n");
      out.write(" */\r\n");
      out.write(" \r\n");
      out.write("var myPieChart = new Chart(\r\n");
      out.write("\t\tctx,\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\ttype : 'pie',\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\tlabels : [ \"보호중인 동물\", \"입양된 동물\", \"반환된 동물\", \"자연사한 동물\", \"안락사된 동물\", \"방사된 동물\", \"기증된 동물\", \"미포획 동물\" ],\r\n");
      out.write("\t\t\t\tdatasets : [ {\r\n");
      out.write("\t\t\t\t\tlabel : '# of Votes',\r\n");
      out.write("\t\t\t\t\tdata : [");
      out.print(organicMap.get("보호중"));
      out.write('	');
      out.write(',');
      out.print(organicMap.get("종료(입양)"));
      out.write(',');
      out.write(' ');
      out.print(organicMap.get("종료(반환)"));
      out.write(',');
      out.write(' ');
      out.print(organicMap.get("종료(자연사)"));
      out.write(",\r\n");
      out.write("\t\t\t\t\t\t");
      out.print(organicMap.get("종료(안락사)"));
      out.write(',');
      out.write(' ');
      out.print(organicMap.get("종료(방사)"));
      out.write(',');
      out.print(organicMap.get("종료(기증)"));
      out.write(',');
      out.write(' ');
      out.print(organicMap.get("종료(미포획)"));
      out.write("],\r\n");
      out.write("\t\t\t\t\tbackgroundColor : [ 'rgba(33, 40, 94, 0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t'rgba(123, 181, 227, 0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t'rgba(248, 196, 219, 0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t'rgba(248, 152, 102, 0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t'rgba(231, 56, 37, 0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t'rgba(78, 180, 191, 0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t'rgba(75, 115, 185, 0.8)',\r\n");
      out.write("\t\t\t\t\t\t\t'rgba(96, 98, 99, 0.8)'],\r\n");
      out.write("\t\t\t\t\tborderColor : [ 'rgba(33, 40, 94, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(123, 181, 227, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(248, 196, 219, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(248, 152, 102, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(231, 56, 37, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(78, 180, 191, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(75, 115, 185, 1)',\r\n");
      out.write("\t\t\t\t\t\t'rgba(96, 98, 99, 1)' ],\r\n");
      out.write("\t\t\t\t\tborderWidth : 1\r\n");
      out.write("\t\t\t\t} ]\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\toptions : {\r\n");
      out.write("\t\t\t\ttooltips : {\r\n");
      out.write("\t\t\t\t\t// Disable the on-canvas tooltip\r\n");
      out.write("\t\t\t\t\tenabled : false,\r\n");
      out.write("\t\t\t\t\tcustom : function(tooltipModel) {\r\n");
      out.write("\t\t\t\t\t\t// Tooltip Element\r\n");
      out.write("\t\t\t\t\t\tvar tooltipEl = document\r\n");
      out.write("\t\t\t\t\t\t\t\t.getElementById('chartjs-tooltip');\r\n");
      out.write("\t\t\t\t\t\t// Create element on first render\r\n");
      out.write("\t\t\t\t\t\tif (!tooltipEl) {\r\n");
      out.write("\t\t\t\t\t\t\ttooltipEl = document.createElement('div');\r\n");
      out.write("\t\t\t\t\t\t\ttooltipEl.id = 'chartjs-tooltip';\r\n");
      out.write("\t\t\t\t\t\t\ttooltipEl.innerHTML = '<table></table>';\r\n");
      out.write("\t\t\t\t\t\t\tdocument.body.appendChild(tooltipEl);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t// Hide if no tooltip\r\n");
      out.write("\t\t\t\t\t\tif (tooltipModel.opacity === 0) {\r\n");
      out.write("\t\t\t\t\t\t\ttooltipEl.style.opacity = 0;\r\n");
      out.write("\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t// Set caret Position\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.classList.remove('above', 'below',\r\n");
      out.write("\t\t\t\t\t\t\t\t'no-transform');\r\n");
      out.write("\t\t\t\t\t\tif (tooltipModel.yAlign) {\r\n");
      out.write("\t\t\t\t\t\t\ttooltipEl.classList.add(tooltipModel.yAlign);\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\ttooltipEl.classList.add('no-transform');\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tfunction getBody(bodyItem) {\r\n");
      out.write("\t\t\t\t\t\t\treturn bodyItem.lines;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t// Set Text\r\n");
      out.write("\t\t\t\t\t\tif (tooltipModel.body) {\r\n");
      out.write("\t\t\t\t\t\t\tvar titleLines = tooltipModel.title || [];\r\n");
      out.write("\t\t\t\t\t\t\tvar bodyLines = tooltipModel.body.map(getBody);\r\n");
      out.write("\t\t\t\t\t\t\tvar innerHtml = '<thead>';\r\n");
      out.write("\t\t\t\t\t\t\ttitleLines.forEach(function(title) {\r\n");
      out.write("\t\t\t\t\t\t\t\tinnerHtml += '<tr><th>' + title\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t+ '</th></tr>';\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\tinnerHtml += '</thead><tbody>';\r\n");
      out.write("\t\t\t\t\t\t\tbodyLines\r\n");
      out.write("\t\t\t\t\t\t\t\t\t.forEach(function(body, i) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar colors = tooltipModel.labelColors[i];\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar style = 'background:'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t+ colors.backgroundColor;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle += '; border-color:'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t+ colors.borderColor;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tstyle += '; border-width: 2px';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tvar span = '<span style=\"' + style + '\"></span>';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tinnerHtml += '<tr><td>' + span\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t+ body + '</td></tr>';\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\tinnerHtml += '</tbody>';\r\n");
      out.write("\t\t\t\t\t\t\tvar tableRoot = tooltipEl\r\n");
      out.write("\t\t\t\t\t\t\t\t\t.querySelector('table');\r\n");
      out.write("\t\t\t\t\t\t\ttableRoot.innerHTML = innerHtml;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t// this will be the overall tooltip\r\n");
      out.write("\t\t\t\t\t\tvar position = this._chart.canvas\r\n");
      out.write("\t\t\t\t\t\t\t\t.getBoundingClientRect();\r\n");
      out.write("\t\t\t\t\t\t// Display, position, and set styles for font\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.style.opacity = 1;\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.style.position = 'absolute';\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.style.left = position.left\r\n");
      out.write("\t\t\t\t\t\t\t\t+ window.pageXOffset + tooltipModel.caretX\r\n");
      out.write("\t\t\t\t\t\t\t\t+ 'px';\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.style.top = position.top\r\n");
      out.write("\t\t\t\t\t\t\t\t+ window.pageYOffset + tooltipModel.caretY\r\n");
      out.write("\t\t\t\t\t\t\t\t+ 'px';\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.style.fontFamily = tooltipModel._bodyFontFamily;\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.style.fontSize = tooltipModel.bodyFontSize\r\n");
      out.write("\t\t\t\t\t\t\t\t+ 'px';\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.style.fontStyle = tooltipModel._bodyFontStyle;\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.style.padding = tooltipModel.yPadding\r\n");
      out.write("\t\t\t\t\t\t\t\t+ 'px ' + tooltipModel.xPadding + 'px';\r\n");
      out.write("\t\t\t\t\t\ttooltipEl.style.pointerEvents = 'none';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("// 누운 막대 그래프 부분\r\n");
      out.write("// 우선 컨텍스트를 가져옵니다. \r\n");
      out.write("var ctx = document.getElementById(\"myBarChart\").getContext('2d');\r\n");
      out.write("/*\r\n");
      out.write("- Chart를 생성하면서, \r\n");
      out.write("- ctx를 첫번째 argument로 넘겨주고, \r\n");
      out.write("- 두번째 argument로 그림을 그릴때 필요한 요소들을 모두 넘겨줍니다. \r\n");
      out.write("*/\r\n");
      out.write("var myBarChart = new Chart(ctx, {\r\n");
      out.write("    type: 'horizontalBar',\r\n");
      out.write("    data: {\r\n");
      out.write("        labels: [ \"보호중인 동물\", \"입양된 동물\", \"반환된 동물\", \"자연사한 동물\", \"안락사된 동물\", \"방사된 동물\", \"기증된 동물\", \"미포획 동물\" ],\r\n");
      out.write("        datasets: [{\r\n");
      out.write("            /* label: '전국 모든 지역 유기동물 현황',  */\r\n");
      out.write("            data: [");
      out.print(organicMap.get("보호중"));
      out.write('	');
      out.write(',');
      out.print(organicMap.get("종료(입양)"));
      out.write(',');
      out.write(' ');
      out.print(organicMap.get("종료(반환)"));
      out.write(',');
      out.write(' ');
      out.print(organicMap.get("종료(자연사)"));
      out.write(",\r\n");
      out.write("\t\t\t\t");
      out.print(organicMap.get("종료(안락사)"));
      out.write(',');
      out.write(' ');
      out.print(organicMap.get("종료(방사)"));
      out.write(',');
      out.print(organicMap.get("종료(기증)"));
      out.write(',');
      out.print(organicMap.get("종료(미포획)"));
      out.write(" ],\r\n");
      out.write("            backgroundColor: [\r\n");
      out.write("            \t'rgba(33, 40, 94, 0.8)',\r\n");
      out.write("\t\t\t\t'rgba(123, 181, 227, 0.8)',\r\n");
      out.write("\t\t\t\t'rgba(248, 196, 219, 0.8)',\r\n");
      out.write("\t\t\t\t'rgba(248, 152, 102, 0.8)',\r\n");
      out.write("\t\t\t\t'rgba(231, 56, 37, 0.8)',\r\n");
      out.write("\t\t\t\t'rgba(78, 180, 191, 0.8)',\r\n");
      out.write("\t\t\t\t'rgba(75, 115, 185, 0.8)',\r\n");
      out.write("\t\t\t\t'rgba(96, 98, 99, 0.8)'\r\n");
      out.write("            ],\r\n");
      out.write("            borderColor: [\r\n");
      out.write("            \t'rgba(33, 40, 94, 1)',\r\n");
      out.write("\t\t\t\t'rgba(123, 181, 227, 1)',\r\n");
      out.write("\t\t\t\t'rgba(248, 196, 219, 1)',\r\n");
      out.write("\t\t\t\t'rgba(248, 152, 102, 1)',\r\n");
      out.write("\t\t\t\t'rgba(231, 56, 37, 1)',\r\n");
      out.write("\t\t\t\t'rgba(78, 180, 191, 1)',\r\n");
      out.write("\t\t\t\t'rgba(75, 115, 185, 1)',\r\n");
      out.write("\t\t\t\t'rgba(96, 98, 99, 1)' \r\n");
      out.write("            ],\r\n");
      out.write("            borderWidth: 1\r\n");
      out.write("        }]\r\n");
      out.write("    },\r\n");
      out.write("    options: {\r\n");
      out.write("    \tlegend:{\r\n");
      out.write("    \t\tdisplay:false\r\n");
      out.write("    \t},\r\n");
      out.write("        maintainAspectRatio: true, // default value. false일 경우 포함된 div의 크기에 맞춰서 그려짐.\r\n");
      out.write("        scales: {\r\n");
      out.write("            yAxes: [{\r\n");
      out.write("                ticks: {\r\n");
      out.write("                    beginAtZero:true\r\n");
      out.write("                }\r\n");
      out.write("            }]\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" // 비동기 처리 부분\r\n");
      out.write("\tvar date1 = '';\r\n");
      out.write("\tvar date2 = '';\r\n");
      out.write("\t\r\n");
      out.write("\t$( \"#testDatepicker1\" ).datepicker({\r\n");
      out.write("\t\tchangeMonth: true, \r\n");
      out.write("\t\tchangeYear: true,\r\n");
      out.write("\t\tnextText: '다음 달',\r\n");
      out.write("\t\tprevText: '이전 달',\r\n");
      out.write("\t\tdayNamesMin : ['월','화','수','목','금','토','일'],\r\n");
      out.write("\t\tmonthNamesShort : ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'],\r\n");
      out.write("\t\tshowButtonPanel: true, \r\n");
      out.write("\t\tcurrentText: '오늘 날짜', \r\n");
      out.write("\t\tcloseText: '닫기',\r\n");
      out.write("\t\tdateFormat: \"yymmdd\",\r\n");
      out.write("\t\tonClose: function(date){\r\n");
      out.write("\t\t\tconsole.log(date);\r\n");
      out.write("\t\t\tdate1 = date;\r\n");
      out.write("\t\t\t$(\"#testDatepicker2\").datepicker( \"option\", \"minDate\", date);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/board/organic/graph/OrganicGraphEnd\",\r\n");
      out.write("\t\t\t\tdata: \"date1=\" + date1 + \"&date2=\"+date2,\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\tconsole.log(data.보호중);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(기증)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(반환)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(자연사)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(입양)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(미포획)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(안락사)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(방사)\"]);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[0] = data[\"보호중\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[1] = data[\"종료(입양)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[2] = data[\"종료(반환)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[3] = data[\"종료(자연사)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[4] = data[\"종료(안락사)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[5] = data[\"종료(방사)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[6] = data[\"종료(기증)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[7] =  data[\"종료(미포획)\"];\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[0] = data[\"보호중\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[1] = data[\"종료(입양)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[2] = data[\"종료(반환)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[3] = data[\"종료(자연사)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[4] = data[\"종료(안락사)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[5] = data[\"종료(방사)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[6] = data[\"종료(기증)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[7] = data[\"종료(미포획)\"];\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tmyPieChart.update();\r\n");
      out.write("\t\t\t\t\tmyBarChart.update();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror:function(jqxhr, textStatus, errorThrown){\r\n");
      out.write("\t\t\t\t\tconsole.log(\"ajax 처리 실패! 그래프\");\r\n");
      out.write("\t\t\t\t\tconsole.log(jqxhr, textStatus, errorThrown);\r\n");
      out.write("\t\t\t\t}\t\t\t\t\t\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$( \"#testDatepicker2\" ).datepicker({\r\n");
      out.write("\t\tchangeMonth: true, \r\n");
      out.write("\t\tchangeYear: true,\r\n");
      out.write("\t\tnextText: '다음 달',\r\n");
      out.write("\t\tprevText: '이전 달',\r\n");
      out.write("\t\tdayNamesMin : ['월','화','수','목','금','토','일'],\r\n");
      out.write("\t\tmonthNamesShort : ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'],\r\n");
      out.write("\t\tshowButtonPanel: true, \r\n");
      out.write("\t\tcurrentText: '오늘 날짜', \r\n");
      out.write("\t\tcloseText: '닫기', \r\n");
      out.write("\t\tdateFormat: \"yymmdd\",\r\n");
      out.write("\t\tonClose: function(date){\r\n");
      out.write("\t\t\tconsole.log(date);\r\n");
      out.write("\t\t\tdate2 = date;\r\n");
      out.write("\t\t\t$(\"#testDatepicker1\").datepicker( \"option\", \"maxDate\", date);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype:\"POST\",\r\n");
      out.write("\t\t\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/board/organic/graph/OrganicGraphEnd\",\r\n");
      out.write("\t\t\t\tdata: \"date1=\" + date1 + \"&date2=\"+date2,\r\n");
      out.write("\t\t\t\tsuccess:function(data){\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\tconsole.log(data.보호중);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(기증)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(반환)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(자연사)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(입양)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(미포획)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(안락사)\"]);\r\n");
      out.write("\t\t\t\t\tconsole.log(data[\"종료(방사)\"]);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[0] = data[\"보호중\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[1] = data[\"종료(입양)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[2] = data[\"종료(반환)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[3] = data[\"종료(자연사)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[4] = data[\"종료(안락사)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[5] = data[\"종료(방사)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[6] = data[\"종료(기증)\"];\r\n");
      out.write("\t\t\t\t\tmyPieChart.data.datasets[0].data[7] =  data[\"종료(미포획)\"];\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[0] = data[\"보호중\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[1] = data[\"종료(입양)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[2] = data[\"종료(반환)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[3] = data[\"종료(자연사)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[4] = data[\"종료(안락사)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[5] = data[\"종료(방사)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[6] = data[\"종료(기증)\"];\r\n");
      out.write("\t\t\t\t\tmyBarChart.data.datasets[0].data[7] = data[\"종료(미포획)\"];\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tmyPieChart.update();\r\n");
      out.write("\t\t\t\t\tmyBarChart.update();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror:function(jqxhr, textStatus, errorThrown){\r\n");
      out.write("\t\t\t\t\tconsole.log(\"ajax 처리 실패! 그래프\");\r\n");
      out.write("\t\t\t\t\tconsole.log(jqxhr, textStatus, errorThrown);\r\n");
      out.write("\t\t\t\t}\t\t\t\t\t\r\n");
      out.write("\t\t\t});\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
